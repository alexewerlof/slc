{
  "systems": [
    {
      "displayName": "Digital Twin API",
      "description": "Can be used to retrieve information about the car and control it remotely",
      "services": [
        {
          "displayName": "Climate API",
          "description": "Retrieves or sets car climate",
          "failures": [
            {
              "consumerIndex": 1,
              "consumptionIndex": 0,
              "symptom": "Can't set the temperature",
              "consequence": "The user cannot set their desired temperature",
              "businessImpact": "The frustrated owner may discourage others from buying our products",
              "likelihood": "Unlikely",
              "impactLevel": "Moderate"
            },
            {
              "consumerIndex": 1,
              "consumptionIndex": 0,
              "symptom": "Can't read the temperature from the car",
              "consequence": "The user cannot decide whether to use remote climate control or not",
              "businessImpact": "They may contact customer support",
              "likelihood": "Likely",
              "impactLevel": "Insignificant"
            }
          ],
          "metrics": [
            {
              "displayName": "response_code between 200-499",
              "description": "error rate",
              "linkedFailuresIndex": [
                0
              ]
            },
            {
              "displayName": "latency < 10 seconds",
              "description": "The response to climate API is relatively fast",
              "linkedFailuresIndex": [
                0
              ]
            },
            {
              "displayName": "GET climate successful",
              "description": "",
              "linkedFailuresIndex": [
                1
              ]
            }
          ]
        },
        {
          "displayName": "Car security API",
          "description": "Can be used to lock or unlock the car",
          "failures": [
            {
              "consumerIndex": 1,
              "consumptionIndex": 1,
              "symptom": "Cannot see the lock status",
              "consequence": "The user may have to physically walk to the car to check it and that's not always possible",
              "businessImpact": "Frustrated user may call customer support or discourage others from buying our product",
              "likelihood": "Rare",
              "impactLevel": "Minor"
            },
            {
              "consumerIndex": 1,
              "consumptionIndex": 1,
              "symptom": "Can't unlock the car",
              "consequence": "The user may have to use a key",
              "businessImpact": "The user may call customer support",
              "likelihood": "Possible",
              "impactLevel": "Insignificant"
            },
            {
              "consumerIndex": 1,
              "consumptionIndex": 1,
              "symptom": "Can't lock the car",
              "consequence": "Thieves may get in the car before the user gets to lock it",
              "businessImpact": "The user may take significant financial damage and take us to court",
              "likelihood": "Rare",
              "impactLevel": "Catastrophic"
            }
          ],
          "metrics": [
            {
              "displayName": "lock status api returns status in less than 10 seconds",
              "description": "Status check should be reasonably fast",
              "linkedFailuresIndex": [
                0
              ]
            },
            {
              "displayName": "lock command API response_code === 202",
              "description": "Successfully registered the command",
              "linkedFailuresIndex": [
                1,
                2
              ]
            },
            {
              "displayName": "lock status api response code between 200 to 399 (inclusive)",
              "description": "lock status check does not fail",
              "linkedFailuresIndex": [
                0
              ]
            }
          ]
        }
      ]
    },
    {
      "displayName": "Image Storage",
      "description": "Retrieves or stores images for different car models in different colors",
      "services": [
        {
          "displayName": "Get car image API",
          "description": "Returns the car image, useful for rendering the website and the app that's used to control the car",
          "failures": [
            {
              "consumerIndex": 1,
              "consumptionIndex": 0,
              "symptom": "The car image cannot be shown in the app",
              "consequence": "The user may get confused",
              "businessImpact": "User may call customer support",
              "likelihood": "Unlikely",
              "impactLevel": "Insignificant"
            },
            {
              "consumerIndex": 1,
              "consumptionIndex": 1,
              "symptom": "The car image cannot be shown in the app",
              "consequence": "The user may get confused",
              "businessImpact": "User may call customer support",
              "likelihood": "Unlikely",
              "impactLevel": "Insignificant"
            },
            {
              "consumerIndex": 0,
              "consumptionIndex": 0,
              "symptom": "Image is missing",
              "consequence": "User will get confused and leave the site",
              "businessImpact": "Loss of potential customer",
              "likelihood": "Possible",
              "impactLevel": "Minor"
            }
          ],
          "metrics": [
            {
              "displayName": "response_code != 4xx",
              "description": "some image is returned",
              "linkedFailuresIndex": [
                0,
                2
              ]
            },
            {
              "displayName": "user does not report the image",
              "description": "image matches the model (we use user report as a check asking them \"report problems\")",
              "linkedFailuresIndex": [
                0,
                2
              ]
            },
            {
              "displayName": "mobile app log indicating missing image",
              "description": "For all other reasons that an image may be missing in the app",
              "linkedFailuresIndex": [
                1
              ]
            }
          ]
        }
      ]
    },
    {
      "displayName": "Document Storage",
      "description": "Stores different types of files like PDF, HTML, and images",
      "services": [
        {
          "displayName": "Car manual API",
          "description": "Returns the car manual in different formats",
          "failures": [
            {
              "consumerIndex": 0,
              "consumptionIndex": 0,
              "symptom": "The user may be unable to look up key information",
              "consequence": "The user may be unsatisfied and either call support or not buy the car",
              "businessImpact": "Prospect may call customer support or sales agents or not buy the car",
              "likelihood": "Unlikely",
              "impactLevel": "Moderate"
            }
          ],
          "metrics": [
            {
              "displayName": "for a valid car model, the manual response code < 400",
              "description": "",
              "linkedFailuresIndex": [
                0
              ]
            },
            {
              "displayName": "download does not break for an already established session",
              "description": "The manual files can be large. if the download is interrupted for any reasons, we may want to look into it.",
              "linkedFailuresIndex": [
                0
              ]
            }
          ]
        },
        {
          "displayName": "Car contract API",
          "description": "Retrieves leasing contracts",
          "failures": [
            {
              "consumerIndex": 1,
              "consumptionIndex": 2,
              "symptom": "Cannot retrieve the contract",
              "consequence": "User may get frustrated",
              "businessImpact": "The customer may call customer support",
              "likelihood": "Rare",
              "impactLevel": "Insignificant"
            },
            {
              "consumerIndex": 1,
              "consumptionIndex": 2,
              "symptom": "Fetching wrong contract",
              "consequence": "User may get confused. In the worse case they may end up paying the wrong amount.",
              "businessImpact": "In the worse case they may end up paying the wrong amount.",
              "likelihood": "Rare",
              "impactLevel": "Major"
            }
          ],
          "metrics": [
            {
              "displayName": "for valid requests, contract retrieval API response code < 400",
              "description": "",
              "linkedFailuresIndex": [
                0
              ]
            },
            {
              "displayName": "the user credentials on the contract should match the user credentials that is logged in (web/mobile)",
              "description": "",
              "linkedFailuresIndex": [
                1
              ]
            }
          ]
        }
      ]
    },
    {
      "displayName": "CMS",
      "description": "Content management system",
      "services": [
        {
          "displayName": "Car specs",
          "description": "Returns car specs and marketing content in different languages",
          "failures": [
            {
              "consumerIndex": 0,
              "consumptionIndex": 0,
              "symptom": "Wrong car specs are shown to the user",
              "consequence": "The user may make incorrect purchase decision. They may take us to court if the website info is legally binding.",
              "businessImpact": "They may take us to court if the website info is legally binding.",
              "likelihood": "Unlikely",
              "impactLevel": "Major"
            }
          ],
          "metrics": [
            {
              "displayName": "Sampled double-check with CMS on a given RUM page is a pass",
              "description": "To ensure that we show the right specs, we randomly check 1% of page views using a JavaScript snippet that scrapes data from our website and sends it to a backend that's made for the purpose of cross-checking this data against what the data that should have been sent via CMS (note: this will also check the cache errors)",
              "linkedFailuresIndex": [
                0
              ]
            }
          ]
        }
      ]
    }
  ],
  "consumers": [
    {
      "displayName": "Web site",
      "description": "Can be used by the potential consumers to learn about the cars, configure it, and order it",
      "consumptions": [
        {
          "displayName": "Product Model Page",
          "description": "Shows information about one particular car"
        }
      ]
    },
    {
      "displayName": "Mobile client",
      "description": "Is used by the car owners to control the car",
      "consumptions": [
        {
          "displayName": "Adjust temperature remotely",
          "description": ""
        },
        {
          "displayName": "Lock/Unlock the car remotely",
          "description": ""
        },
        {
          "displayName": "Check car leasing contract",
          "description": "Allows the consumers to quickly review their contract on the go"
        }
      ]
    }
  ]
}