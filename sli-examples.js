// Some examples are based on Google's SRE book: https://sre.google/workbook/slo-document/
export default [
    {
        title: 'Availability: Synthetic uptime probe',
        description: 'The percentage of successful synthetic probes that do a HTTP GET request to the root endpoint evey minute',
        good: 'ping_response_code == 200',
        isTimeBased: true,
        timeSlot: 60,
    },
    {
        title: 'Availability: Organic traffic uptime',
        description: 'The percentage of successful requests to the endpoint',
        good: '200 ≤ response_code < 500',
        valid: 'inbound',
        unit: 'requests',
    },
    {
        title: 'Availability: Organic purchase flow',
        description: 'The percentage of settled payments out of all orders placed via the website',
        good: 'orders_with_settled_payment',
        valid: 'order_placed_via_website',
        unit: 'orders',
    },
    {
        title: 'Availability: Error Rate',
        description: 'The percentage of authenticated requests that were successful',
        good: 'response_code < 500',
        valid: 'authenticated',
        unit: 'requests',
    },
    {
        title: 'Latency: Response Latency',
        description: 'The percentage of sufficiently fast requests, as measured from the load balancer metrics. "Sufficiently fast" is defined as < 400 ms',
        good: 'response_latency ≤ 400ms',
        valid: 'authenticated',
        unit: 'requests',
    },
    {
        title: 'Latency: Database Query',
        description: 'The percentage of sufficiently fast database queries for a specific query type. "Sufficiently fast" is defined as < 100 ms',
        good: 'query_latency ≤ 100ms',
        valid: 'all insertion queries to the customers table',
        unit: 'insertion queries',
    },
    {
        title: 'Latency: Response 75th Percentile',
        description: 'The percentage of 5m requests where the P75 percentile latency of the requests was sufficiently fast. "Sufficiently fast" is defined as < 800 ms',
        good: 'P75(response_latency, 5m) ≤ 800ms',
        isTimeBased: true,
        timeSlot: 300,
    },
    {
        title: 'Throughput: Request Rate',
        description: 'The number of minutes where the throughput of the component that processes requests (e.g. worker consuming a queue) is sufficiently high',
        good: 'rpm > 80',
        unit: 'rpm',
        isTimeBased: true,
        timeSlot: 60,
    },
    {
        title: 'Freshness: Main database table',
        description: 'The proportion of records read from the main database table that were updated recently. "Recently" is defined as within 1 minute. Uses metrics from the API and HTTP server',
        good: 'correct data_requests',
        valid: 'all data_requests',
        unit: 'data_requests',
    },
    {
        title: 'Completeness: Game data',
        description: 'The proportion of hours in which 100% of the games in the data store were processed (no records were skipped). Uses metrics exported by the score pipeline',
        good: 'pipeline runs that process 100% of the records',
        valid: 'pipeline runs',
        unit: 'pipeline runs',
    },
    {
        title: 'Consistency: Replication Lag',
        description: 'The percentage of database write events which are repliacated in a sufficiently quick time. "Sufficiently small" is defined as < 1s',
        good: 'replication_lag ≤ 1s',
        valid: 'all database write events',
        unit: 's',
    },
    {
        title: 'Incident Handling Speed',
        description: 'The percentage of highly severe incidents that were resolved sufficiently fast. "Sufficiently fast" is defined as < 30m',
        good: 'time_to_restore ≤ 30m',
        valid: 'Incident Severity == 1 || 2',
        unit: 'incidents',
    },
    {
        title: 'Time To Acknolwledge',
        description: 'The percentage of high priority incidents that were acknowledged sufficiently fast. "Sufficiently fast" is defined as < 5m',
        good: 'time_to_acknowledge ≤ 5m',
        valid: 'Incident Priority == 1',
        unit: 'incidents',
    },
]
